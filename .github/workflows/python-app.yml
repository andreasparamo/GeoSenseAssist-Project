name: Python Application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:latest
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.USER_PASSWORD }}
          MYSQL_DATABASE: ${{ secrets.DATABASE_NAME }}
          MYSQL_USER: ${{ secrets.USER_NAME }}
          MYSQL_PASSWORD: ${{ secrets.USER_PASSWORD }}
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h 127.0.0.1 -u ${{ secrets.USER_NAME }} --password=${{ secrets.USER_PASSWORD }}"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      - name: Set up environment variables
        run: |
          echo "API_KEY=${{ secrets.API_KEY }}" >> $GITHUB_ENV
          echo "DB_HOST=127.0.0.1" >> $GITHUB_ENV
          echo "DB_USER=${{ secrets.USER_NAME }}" >> $GITHUB_ENV
          echo "DB_PASSWORD=${{ secrets.USER_PASSWORD }}" >> $GITHUB_ENV
          echo "DB_NAME=${{ secrets.DATABASE_NAME }}" >> $GITHUB_ENV

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest pygame mysql-connector-python
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Lint with flake8
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Wait for MySQL to be ready
        run: |
          echo "Waiting for MySQL to be ready..."
          for i in {30..0}; do
            if mysql -h 127.0.0.1 -u ${{ secrets.USER_NAME }} --password=${{ secrets.USER_PASSWORD }} -e 'SELECT 1' ${{ secrets.DATABASE_NAME }}; then
              echo "MySQL is ready!"
              exit 0
            fi
            echo "Waiting..."
            sleep 2
          done
          echo "MySQL failed to start!"
          exit 1

      - name: Start Flask app
        run: |
          nohup python main.py > flask.log 2>&1 &
          sleep 10

      - name: Display Flask logs
        run: cat flask.log

      - name: Run API tests
        run: pytest tests/test_code.py

      - name: Stop Flask app
        run: pkill -f main.py || true
